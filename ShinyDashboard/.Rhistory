runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
df_melted
df_melted[df_melted$user == "Student 290"]
df_melted[df_melted$user == "Student 290",]
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
aa <- df_melted[df_melted$user == "Student 290",]
unique(aa$userN)
unique(aa$userN)[1]
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
df
library(tidyverse)
library(plotly)
library(reshape2)
library(gridExtra)
datosf <- read.csv("funnelOutput.csv", header = TRUE)
total_puzzles <- 30
class <- "8cbfa61cb2b025b16b04a8e470422960"
#class <-"cb71040b5bd1341a34afc24961536ebd"
df <- datosf  %>% mutate(started = started/total_puzzles, create_shape = create_shape/total_puzzles, submitted = submitted/total_puzzles, completed = completed/total_puzzles) %>% filter(group == class) %>% select(-task_id, -group)
df_melted <- df %>% melt(id.vars = c("user"), measure.vars = c("started", "create_shape", "submitted", "completed"), variable.name = "funnel_state") %>%  mutate(userN = user) %>% mutate(user = paste("Student",  as.numeric(user)))
#df_melted <- df  %>% melt(id.vars = c("user"), measure.vars = c("started", "create_shape", "submitted", "completed"), variable.name = "funnel_state")
datosf
datosf[datosf$user==00f86c5fc28e8d326cdae17ea97c7387,]
datosf[datosf$user=="00f86c5fc28e8d326cdae17ea97c7387",]
datosf[datosf$user=="00f86c5fc28e8d326cdae17ea97c7387",]$group
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
install.packages("shinyjs")
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
dfSequence <- read.csv("sequenceOutput.csv", header = TRUE)
dfSequence$sequence
levels(dfSequence$sequence)
dfSequence <- read.csv("sequenceOutput.csv", header = TRUE)
library(shiny); runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
library(shiny); runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
library(shiny); runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
dfSequence <- read.csv("sequenceOutput.csv", header = TRUE)
runApp('Desktop/ShinyDashboard/DashboardMIT.R')
runApp('Desktop/ShinyDashboard/DashboardMIT.R')
runApp('Desktop/ShinyDashboard/DashboardMIT.R')
runApp('Desktop/ShinyDashboard/DashboardMIT.R')
runApp('Desktop/ShinyDashboard/DashboardMIT.R')
runApp('Desktop/ShinyDashboard/DashboardMIT.R')
runApp('Desktop/ShinyDashboard/DashboardMIT.R')
library(shiny); runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
dfSequence$funnel
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
factor(dfSequence$funnel)
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
unique(funnel)
unique(dfSequence$funnel)
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
factor(dfSequence$funnel)
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
library(shiny); runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/ShinyManuelTFG.R')
runApp('Desktop/ShinyDashboard/ShinyManuelTFG.R')
runApp('Desktop/ShinyDashboard/ShinyManuelTFG.R')
runApp('Desktop/ShinyDashboard/ShinyManuelTFG.R')
runApp('Desktop/ShinyDashboard/ShinyManuelTFG.R')
runApp('Desktop/ShinyDashboard/ShinyManuelTFG.R')
runApp('Desktop/ShinyDashboard/ShinyManuelTFG.R')
runApp('Desktop/ShinyDashboard/ShinyManuelTFG.R')
runApp('Desktop/ShinyDashboard/ShinyManuelTFG.R')
runApp('Desktop/ShinyDashboard/ShinyManuelTFG.R')
runApp('Desktop/ShinyDashboard/ShinyManuelTFG.R')
runApp('Desktop/ShinyDashboard/ShinyManuelTFG.R')
runApp('Desktop/ShinyDashboard/ShinyManuelTFG.R')
runApp('Desktop/ShinyDashboard/ShinyManuelTFG.R')
library(shiny); runApp('Desktop/ShinyDashboard/ShinyManuelTFG.R')
runApp('Desktop/ShinyDashboard/ShinyManuelTFG.R')
runApp('Desktop/ShinyDashboard/ShinyManuelTFG.R')
runApp('Desktop/ShinyDashboard/ShinyManuelTFG.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
library(shiny); runApp('Desktop/ShinyDashboard/ShinyManuelTFG.R')
runApp('Desktop/ShinyDashboard/DashBoardShinyComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardComplete.R')
runApp('Desktop/ShinyDashboard/DashBoardComplete.R')
setwd("~/Desktop/ShinyDashboard")
library(png)
library(grid)
library(tidyverse)
library(plotly)
library(reshape2)
library(magick)
library(extrafont)
library(flip)
seqWithinDf <- read.csv("seqWPOutput.csv", header = TRUE)
seqWithinDf$type <- factor(seqWithinDf$type, levels = c("ws-check_solution", "ws-create_shape", "ws-delete_shape", "ws-move_shape", "ws-rotate_shape", "ws-rotate_view", "ws-scale_shape", "ws-snapshot"),
labels = c("submit", "create", "delete", "move", "rotate", "rotate_view", "scale", "snapshot"))
seqWithinDf$shape_type <- factor(seqWithinDf$shape_type, levels = c("-", "1", "2", "3", "4", "5", "6"),
labels = c("-", "cube", "pyramid", "prism", "cylinder", "cone", "sphere"))
create_sphere <- image_read("add_sphere.png")
create_cone <- image_read("add_cone.png")
create_cube <- image_read("add_cube.png")
create_cylinder <- image_read("add_cylinder.png")
create_prism <- image_read("add_prism.png")
create_pyramid <- image_read("add_pyramid.png")
delete_sphere <- image_read("delete_sphere.png")
delete_cone <- image_read("delete_cone.png")
delete_cube <- image_read("delete_cube.png")
delete_cylinder <- image_read("delete_cylinder.png")
delete_prism <- image_read("delete_prism.png")
delete_pyramid <- image_read("delete_pyramid.png")
scale_sphere <- image_read("scale_sphere.png")
scale_cone <- image_read("scale_cone.png")
scale_cube <- image_read("scale_cube.png")
scale_cylinder <- image_read("scale_cylinder.png")
scale_prism <- image_read("scale_prism.png")
scale_pyramid <- image_read("scale_pyramid.png")
move_sphere <- image_read("move_sphere.png")
move_cone <- image_read("move_cone.png")
move_cube <- image_read("move_cube.png")
move_cylinder <- image_read("move_cylinder.png")
move_prism <- image_read("move_prism.png")
move_pyramid <- image_read("move_pyramid.png")
rotate_sphere <- image_read("rotate_sphere.png")
rotate_cone <- image_read("rotate_cone.png")
rotate_cube <- image_read("rotate_cube.png")
rotate_cylinder <- image_read("rotate_cylinder.png")
rotate_prism <- image_read("rotate_prism.png")
rotate_pyramid <- image_read("rotate_pyramid.png")
submit_correct <- image_read("submit_correct.png")
submit_incorrect <- image_read("submit_incorrect.png")
snapshot <- image_read("snapshot.png")
rotate_view <- image_read("rotate_view.png")
pizarra <- image_read("pizarra.png")
class <- "cb71040b5bd1341a34afc24961536ebd"
student <- "56ccce25ead834182d605eff319bfa2c"
puzzle <- "Boxes Obscure Spheres"
attempt <- 9
class2 <- "cb71040b5bd1341a34afc24961536ebd"
student2 <- "56ccce25ead834182d605eff319bfa2c"
puzzle2 <- "Pi Henge"
attempt2 <- 6
class3 <- "e6af7d42084352a39449e6d0a09b18cd"
student3 <- "48e2fa8526344763b562fc7318987b5f"
puzzle3 <- "Orange Dance"
attempt3 <- 10
currentPuzzle <- seqWithinDf %>% filter(group_id == class) %>% filter(user == student) %>% filter(task_id == puzzle) %>% filter(n_attempt == attempt)
#Vemos cuantas filas tiene para poder escalar en consecuencia
n = 0
filas = 0
for (row in 1:nrow(currentPuzzle)) {
n = n + 1
if (n == 10 || currentPuzzle$type[row] == "submit") {
filas = filas + 1
n = 0
}
}
#qplot(1:10, 1:10, geom="blank") +
#  annotation_custom(g, xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf) +
#  geom_point()
if (exists("rasterImage")) { # can plot only in R 2.11.0 and higher
plot(1:3, type='n', axes = FALSE, xlab = "", ylab = "", main = currentPuzzle$task_id[1], font.main=4, cex.main=1)
# any reasonable device will be fine using alpha
#Desde el 2 hasta el 1.6 en la x , desde el 1.5 hasta el 1.8 en la y
#0.4 de sep en la x, 0.3 en la y
#(x,y)(x,y)
#0.2 de sep en el x, 0.15 en la y
if (filas > 11) {
offsetX = 0.1
offsetY = 0.075
xI = 1
yI = 2.9
limitColumn = 20
} else if (filas > 3) {
offsetX = 0.2
offsetY = 0.15
xI = 1
yI = 2.9
limitColumn = 10
} else {
offsetX = 0.4
offsetY = 0.3
xI = 1
yI = 2.9
limitColumn = 5
}
contador = 0
rasterImage(pizarra, 0.5, 0, 3.3, 3.5)
for (row in 1:nrow(currentPuzzle)) {
if (contador == limitColumn) {
yI = yI - offsetY
xI = 1
contador = 0
}
if (currentPuzzle$type[row] == "rotate_view") {
img_use <- rotate_view
} else if (currentPuzzle$type[row] == "submit") {
if (currentPuzzle$correct[row] == "True") {
img_use <- submit_correct
} else {
img_use <- submit_incorrect
}
} else if (currentPuzzle$type[row] == "snapshot") {
img_use <- snapshot
} else {
stringAction <- currentPuzzle$type[row]
figure <- currentPuzzle$shape_type[row]
nameString <- paste(stringAction, figure, sep = "_")
img_use <- eval(as.symbol(nameString))
img_use <- image_annotate(img_use, currentPuzzle$shape_id[row], size = 175, gravity = "south", color = "white")
}
if (currentPuzzle$n_times[row] > 1){
if (currentPuzzle$type[row] == "rotate_view" || currentPuzzle$type == "submit" || currentPuzzle$type == "snapshot"){
imgAnnotated <- image_annotate(img_use, paste( "x", currentPuzzle$n_times[row], sep= ""), size = 85, gravity = "northeast", color = "white")
} else {
imgAnnotated <- image_annotate(img_use, paste( "x", currentPuzzle$n_times[row], sep= ""), size = 200, gravity = "northeast", color = "white")
}
} else {
imgAnnotated <- img_use
}
flip(imgAnnotated, direction = "x")
rasterImage(imgAnnotated, xI, yI, (xI+offsetX), yI - offsetY, interpolate=FALSE)
xI = xI + offsetX
contador = contador + 1
if (currentPuzzle$type[row] == "submit") {
if  (currentPuzzle$correct[row] == "False") {
xI = 1
yI = yI - (offsetY + 0.05)
contador = 0
}
}
}
}
class <- "cb71040b5bd1341a34afc24961536ebd"
student <- "56ccce25ead834182d605eff319bfa2c"
puzzle <- "Boxes Obscure Spheres"
attempt <- 9
currentPuzzle <- seqWithinDf %>% filter(group_id == class) %>% filter(user == student) %>% filter(task_id == puzzle) %>% filter(n_attempt == attempt)
#Vemos cuantas filas tiene para poder escalar en consecuencia
n = 0
filas = 0
for (row in 1:nrow(currentPuzzle)) {
n = n + 1
if (n == 10 || currentPuzzle$type[row] == "submit") {
filas = filas + 1
n = 0
}
}
#qplot(1:10, 1:10, geom="blank") +
#  annotation_custom(g, xmin=-Inf, xmax=Inf, ymin=-Inf, ymax=Inf) +
#  geom_point()
if (exists("rasterImage")) { # can plot only in R 2.11.0 and higher
plot(1:3, type='n', axes = FALSE, xlab = "", ylab = "", main = currentPuzzle$task_id[1], font.main=4, cex.main=1)
# any reasonable device will be fine using alpha
#Desde el 2 hasta el 1.6 en la x , desde el 1.5 hasta el 1.8 en la y
#0.4 de sep en la x, 0.3 en la y
#(x,y)(x,y)
#0.2 de sep en el x, 0.15 en la y
if (filas > 11) {
offsetX = 0.1
offsetY = 0.075
xI = 1
yI = 2.9
limitColumn = 20
} else if (filas > 3) {
offsetX = 0.2
offsetY = 0.15
xI = 1
yI = 2.9
limitColumn = 10
} else {
offsetX = 0.4
offsetY = 0.3
xI = 1
yI = 2.9
limitColumn = 5
}
contador = 0
rasterImage(pizarra, 0.5, 0, 3.3, 3.5)
for (row in 1:nrow(currentPuzzle)) {
if (contador == limitColumn) {
yI = yI - offsetY
xI = 1
contador = 0
}
if (currentPuzzle$type[row] == "rotate_view") {
img_use <- rotate_view
} else if (currentPuzzle$type[row] == "submit") {
if (currentPuzzle$correct[row] == "True") {
img_use <- submit_correct
} else {
img_use <- submit_incorrect
}
} else if (currentPuzzle$type[row] == "snapshot") {
img_use <- snapshot
} else {
stringAction <- currentPuzzle$type[row]
figure <- currentPuzzle$shape_type[row]
nameString <- paste(stringAction, figure, sep = "_")
img_use <- eval(as.symbol(nameString))
img_use <- image_annotate(img_use, currentPuzzle$shape_id[row], size = 175, gravity = "south", color = "white")
}
if (currentPuzzle$n_times[row] > 1){
if (currentPuzzle$type[row] == "rotate_view" || currentPuzzle$type == "submit" || currentPuzzle$type == "snapshot"){
imgAnnotated <- image_annotate(img_use, paste( "x", currentPuzzle$n_times[row], sep= ""), size = 85, gravity = "northeast", color = "white")
} else {
imgAnnotated <- image_annotate(img_use, paste( "x", currentPuzzle$n_times[row], sep= ""), size = 200, gravity = "northeast", color = "white")
}
} else {
imgAnnotated <- img_use
}
flip(imgAnnotated, direction = "x")
rasterImage(imgAnnotated, xI, yI, (xI+offsetX), yI - offsetY, interpolate=FALSE)
xI = xI + offsetX
contador = contador + 1
if (currentPuzzle$type[row] == "submit") {
if  (currentPuzzle$correct[row] == "False") {
xI = 1
yI = yI - (offsetY + 0.05)
contador = 0
}
}
}
}
library(shiny); runApp('ShinyManuelTFG.R')
runApp('ShinyManuelTFG.R')
runApp('ShinyManuelTFG.R')
